/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Main.java
 *
 * Created on 31-mar-2010, 17:13:24
 */
package net.ausiasmarch.turnos;

import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.Rectangle;
import java.awt.event.KeyEvent;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Properties;
import javax.swing.JOptionPane;

/**
 *
 * @author Administrador
 */
public class Main extends javax.swing.JFrame {

    int numTurnos;

    /** Creates new form Main */
    public Main() {
        initComponents();

        turnoPrincipal.start();
        turnoSecundario.start();


        this.setExtendedState(this.getExtendedState() | this.MAXIMIZED_BOTH);
        jCheckBoxMenuItemBeep.setSelected(turnoPrincipal.isBeep());
        Turno.startSevlet();

        loadNumTurnos();

    }

    private void loadNumTurnos() {
        numTurnos = 1;
        Properties props = new Properties();
        try {
            props.load(new FileInputStream("turnos.properties"));
            if (props.getProperty("numTurnos") != null) {
                numTurnos = Integer.parseInt(props.getProperty("numTurnos"));
            }
        } catch (IOException ex) {
            return;
        }

        setNumTurnos(numTurnos);
    }

    private void saveNumTurnos() {

        Properties props = new Properties();
        try {
            props.load(new FileInputStream("turnos.properties"));
        } catch (IOException ex) {
            return;
        }
        props.setProperty("numTurnos", String.valueOf(numTurnos));
        try {
            props.store(new FileOutputStream("turnos.properties"), "Propiedades de los turnos");
        } catch (IOException ex) {
            return;
        }
    }

    private int getNumTurnos() {
        return numTurnos;
    }

    private void setNumTurnos(int numTurnos) {

        this.numTurnos = numTurnos;

        switch (numTurnos) {
            case 1:
                turnoPrincipal.setVisible(true);
                turnoSecundario.setVisible(false);


                this.getContentPane().remove(turnoSecundario);
                ((GridLayout) this.getContentPane().getLayout()).setColumns(1);
                ((GridLayout) this.getContentPane().getLayout()).setRows(1);
                validate();

                jCheckBoxMenuItemDosTurnos.setSelected(false);

                break;
            case 2:
                turnoPrincipal.setVisible(true);
                turnoSecundario.setVisible(true);

                this.getContentPane().add(turnoSecundario);
                ((GridLayout) this.getContentPane().getLayout()).setRows(2);
                ((GridLayout) this.getContentPane().getLayout()).setColumns(1);
                validate();

                jCheckBoxMenuItemDosTurnos.setSelected(true);

                break;
            default:
                throw new RuntimeException("Valor fuera de rango:" + numTurnos);
        }


    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        turnoPrincipal = new net.ausiasmarch.turnos.Turno();
        turnoSecundario = new net.ausiasmarch.turnos.Turno();
        jMenuBarMain = new javax.swing.JMenuBar();
        jMenuArchivo = new javax.swing.JMenu();
        jMenuItemNuevo = new javax.swing.JMenuItem();
        jMenuItemLeerPrincipal = new javax.swing.JMenuItem();
        jMenuItemGuardarPrincipal = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        jCheckBoxMenuItemBeep = new javax.swing.JCheckBoxMenuItem();
        jMenuItemFontSize = new javax.swing.JMenuItem();
        jCheckBoxMenuItemDosTurnos = new javax.swing.JCheckBoxMenuItem();
        jSeparator2 = new javax.swing.JSeparator();
        jMenuItemSalir = new javax.swing.JMenuItem();
        jMenuTurnoPrincipal = new javax.swing.JMenu();
        jMenuItemValorMaximoPrincipal = new javax.swing.JMenuItem();
        jMenuItemEstablecerValorPrincipal = new javax.swing.JMenuItem();
        jMenuItemReiniciarPrincipal = new javax.swing.JMenuItem();
        jMenuItemDescripcionPrincipal = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemValorMaximoSecundaria = new javax.swing.JMenuItem();
        jMenuItemEstablecerValorSecundario = new javax.swing.JMenuItem();
        jMenuItemReiniciarSecundario = new javax.swing.JMenuItem();
        jMenuItemDescripcionSecundario = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Turno Secretaría ");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridLayout(2, 0));

        turnoPrincipal.setMinValue(1);
        turnoPrincipal.setName("turnoPrincipal"); // NOI18N
        turnoPrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                turnoPrincipalMouseClicked(evt);
            }
        });
        getContentPane().add(turnoPrincipal);

        turnoSecundario.setMinValue(1);
        turnoSecundario.setName("turnoSecundario"); // NOI18N
        turnoSecundario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                turnoSecundarioMouseClicked(evt);
            }
        });
        getContentPane().add(turnoSecundario);

        jMenuArchivo.setText("Archivo");

        jMenuItemNuevo.setText("Nuevo");
        jMenuItemNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNuevoActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuItemNuevo);

        jMenuItemLeerPrincipal.setText("Leer");
        jMenuItemLeerPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemLeerPrincipalActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuItemLeerPrincipal);

        jMenuItemGuardarPrincipal.setText("Guardar");
        jMenuItemGuardarPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemGuardarPrincipalActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuItemGuardarPrincipal);
        jMenuArchivo.add(jSeparator1);

        jCheckBoxMenuItemBeep.setSelected(true);
        jCheckBoxMenuItemBeep.setText("Sonido");
        jCheckBoxMenuItemBeep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemBeepActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jCheckBoxMenuItemBeep);

        jMenuItemFontSize.setText("Tamaño Fuente");
        jMenuItemFontSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFontSizeActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuItemFontSize);

        jCheckBoxMenuItemDosTurnos.setSelected(true);
        jCheckBoxMenuItemDosTurnos.setText("Dos Turnos");
        jCheckBoxMenuItemDosTurnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemDosTurnosActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jCheckBoxMenuItemDosTurnos);
        jMenuArchivo.add(jSeparator2);

        jMenuItemSalir.setText("Salir");
        jMenuItemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSalirActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuItemSalir);

        jMenuBarMain.add(jMenuArchivo);

        jMenuTurnoPrincipal.setText("Turno Principal");

        jMenuItemValorMaximoPrincipal.setText("Valor Máximo");
        jMenuItemValorMaximoPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemValorMaximoPrincipalActionPerformed(evt);
            }
        });
        jMenuTurnoPrincipal.add(jMenuItemValorMaximoPrincipal);

        jMenuItemEstablecerValorPrincipal.setText("Establecer Valor");
        jMenuItemEstablecerValorPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEstablecerValorPrincipalActionPerformed(evt);
            }
        });
        jMenuTurnoPrincipal.add(jMenuItemEstablecerValorPrincipal);

        jMenuItemReiniciarPrincipal.setText("Reiniciar");
        jMenuItemReiniciarPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemReiniciarPrincipalActionPerformed(evt);
            }
        });
        jMenuTurnoPrincipal.add(jMenuItemReiniciarPrincipal);

        jMenuItemDescripcionPrincipal.setText("Descripción");
        jMenuItemDescripcionPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDescripcionPrincipalActionPerformed(evt);
            }
        });
        jMenuTurnoPrincipal.add(jMenuItemDescripcionPrincipal);

        jMenuBarMain.add(jMenuTurnoPrincipal);

        jMenu1.setText("Turno Secundario");

        jMenuItemValorMaximoSecundaria.setText("Valor Máximo");
        jMenuItemValorMaximoSecundaria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemValorMaximoSecundariaActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemValorMaximoSecundaria);

        jMenuItemEstablecerValorSecundario.setText("Establecer Valor");
        jMenuItemEstablecerValorSecundario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEstablecerValorSecundarioActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemEstablecerValorSecundario);

        jMenuItemReiniciarSecundario.setText("Reiniciar");
        jMenu1.add(jMenuItemReiniciarSecundario);

        jMenuItemDescripcionSecundario.setText("Descripción");
        jMenuItemDescripcionSecundario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDescripcionSecundarioActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemDescripcionSecundario);

        jMenuBarMain.add(jMenu1);

        setJMenuBar(jMenuBarMain);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        int keyCode = evt.getKeyCode();

        if (keyCode == KeyEvent.VK_SPACE) {
            turnoPrincipal.inc();
        } else if (keyCode == KeyEvent.VK_BACK_SPACE) {
            turnoPrincipal.dec();
        } else if (keyCode == KeyEvent.VK_ADD) {
            if (getNumTurnos() > 1) {
                turnoSecundario.inc();
            }
        } else if (keyCode == KeyEvent.VK_SUBTRACT) {
            if (getNumTurnos() > 1) {
                turnoSecundario.dec();
            }
        }
    }//GEN-LAST:event_formKeyReleased

    private void jMenuItemReiniciarPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemReiniciarPrincipalActionPerformed
        turnoPrincipal.reset();
    }//GEN-LAST:event_jMenuItemReiniciarPrincipalActionPerformed

    private void jMenuItemEstablecerValorPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEstablecerValorPrincipalActionPerformed

        String response = (String) JOptionPane.showInputDialog(null, "Número del turno principal:", "Valor del Turno", JOptionPane.QUESTION_MESSAGE, null, null, turnoPrincipal.getCurrentValue() + "");

        try {
            turnoPrincipal.setCurrentValue(Integer.parseInt(response));
        } catch (Exception ex) {
        }

    }//GEN-LAST:event_jMenuItemEstablecerValorPrincipalActionPerformed

    private void jMenuItemFontSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFontSizeActionPerformed
        String response = (String) JOptionPane.showInputDialog(this, "Tamaño de la fuente (De 100 a 400):", "Tamaño", JOptionPane.QUESTION_MESSAGE, null, null, turnoPrincipal.getFontSize() + "");

        try {
            int fontSize = Integer.parseInt(response);

            turnoPrincipal.setFontSize(fontSize);
            turnoSecundario.setFontSize(fontSize);
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_jMenuItemFontSizeActionPerformed

    private void jCheckBoxMenuItemBeepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemBeepActionPerformed
        turnoPrincipal.setBeep(!turnoPrincipal.isBeep());
        turnoSecundario.setBeep(turnoPrincipal.isBeep());
        jCheckBoxMenuItemBeep.setSelected(turnoPrincipal.isBeep());

    }//GEN-LAST:event_jCheckBoxMenuItemBeepActionPerformed

    private void jMenuItemValorMaximoPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemValorMaximoPrincipalActionPerformed
        String response = (String) JOptionPane.showInputDialog(this, "Valor máximo del turno principal:", "Valor máximo", JOptionPane.QUESTION_MESSAGE, null, null, turnoPrincipal.getMaxValue());

        try {
            int valorMaximo = Integer.parseInt(response);

            turnoPrincipal.setMaxValue(valorMaximo);
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_jMenuItemValorMaximoPrincipalActionPerformed

    private void jMenuItemGuardarPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemGuardarPrincipalActionPerformed
        turnoPrincipal.save();
        turnoSecundario.save();
    }//GEN-LAST:event_jMenuItemGuardarPrincipalActionPerformed

    private void jMenuItemLeerPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemLeerPrincipalActionPerformed
        turnoPrincipal.load();
        turnoSecundario.load();
        jCheckBoxMenuItemBeep.setSelected(turnoPrincipal.isBeep());
    }//GEN-LAST:event_jMenuItemLeerPrincipalActionPerformed

    private void turnoPrincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_turnoPrincipalMouseClicked
        turnoPrincipal.inc();
    }//GEN-LAST:event_turnoPrincipalMouseClicked

    private void jMenuItemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItemSalirActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        Turno.stopSevlet();
        turnoPrincipal.save();
        turnoSecundario.save();
        saveNumTurnos();
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        turnoPrincipal.load();
        turnoSecundario.load();
        jCheckBoxMenuItemBeep.setSelected(turnoPrincipal.isBeep());
    }//GEN-LAST:event_formWindowOpened

    private void turnoSecundarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_turnoSecundarioMouseClicked
        if (getNumTurnos() > 1) {
            turnoSecundario.inc();
        }
    }//GEN-LAST:event_turnoSecundarioMouseClicked

    private void jCheckBoxMenuItemDosTurnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemDosTurnosActionPerformed
        if (jCheckBoxMenuItemDosTurnos.isSelected() == false) {
            setNumTurnos(1);
        } else {
            setNumTurnos(2);
        }
    }//GEN-LAST:event_jCheckBoxMenuItemDosTurnosActionPerformed

    private void jMenuItemValorMaximoSecundariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemValorMaximoSecundariaActionPerformed
        String response = (String) JOptionPane.showInputDialog(this, "Valor máximo del turno secundario:", "Valor máximo", JOptionPane.QUESTION_MESSAGE, null, null, turnoSecundario.getMaxValue());

        try {
            int valorMaximo = Integer.parseInt(response);

            turnoSecundario.setMaxValue(valorMaximo);
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_jMenuItemValorMaximoSecundariaActionPerformed

    private void jMenuItemEstablecerValorSecundarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEstablecerValorSecundarioActionPerformed
        String response = (String) JOptionPane.showInputDialog(null, "Número del turno secundario:", "Valor del Turno", JOptionPane.QUESTION_MESSAGE, null, null, turnoSecundario.getCurrentValue() + "");

        try {
            turnoSecundario.setCurrentValue(Integer.parseInt(response));
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_jMenuItemEstablecerValorSecundarioActionPerformed

    private void jMenuItemNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNuevoActionPerformed
        turnoPrincipal.reset();
        turnoSecundario.reset();
    }//GEN-LAST:event_jMenuItemNuevoActionPerformed

    private void jMenuItemDescripcionPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDescripcionPrincipalActionPerformed
        String response = (String) JOptionPane.showInputDialog(this, "Descripción del turno principal:", "Descripción", JOptionPane.QUESTION_MESSAGE, null, null, turnoPrincipal.getDescription());


        turnoPrincipal.setDescription(response);

    }//GEN-LAST:event_jMenuItemDescripcionPrincipalActionPerformed

    private void jMenuItemDescripcionSecundarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDescripcionSecundarioActionPerformed
        String response = (String) JOptionPane.showInputDialog(null, "Descripción del turno secundario:", "Descripción", JOptionPane.QUESTION_MESSAGE, null, null, turnoSecundario.getDescription() + "");


        turnoSecundario.setDescription(response);

    }//GEN-LAST:event_jMenuItemDescripcionSecundarioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Main().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemBeep;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemDosTurnos;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenuArchivo;
    private javax.swing.JMenuBar jMenuBarMain;
    private javax.swing.JMenuItem jMenuItemDescripcionPrincipal;
    private javax.swing.JMenuItem jMenuItemDescripcionSecundario;
    private javax.swing.JMenuItem jMenuItemEstablecerValorPrincipal;
    private javax.swing.JMenuItem jMenuItemEstablecerValorSecundario;
    private javax.swing.JMenuItem jMenuItemFontSize;
    private javax.swing.JMenuItem jMenuItemGuardarPrincipal;
    private javax.swing.JMenuItem jMenuItemLeerPrincipal;
    private javax.swing.JMenuItem jMenuItemNuevo;
    private javax.swing.JMenuItem jMenuItemReiniciarPrincipal;
    private javax.swing.JMenuItem jMenuItemReiniciarSecundario;
    private javax.swing.JMenuItem jMenuItemSalir;
    private javax.swing.JMenuItem jMenuItemValorMaximoPrincipal;
    private javax.swing.JMenuItem jMenuItemValorMaximoSecundaria;
    private javax.swing.JMenu jMenuTurnoPrincipal;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private net.ausiasmarch.turnos.Turno turnoPrincipal;
    private net.ausiasmarch.turnos.Turno turnoSecundario;
    // End of variables declaration//GEN-END:variables
}
